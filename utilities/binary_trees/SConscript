import os

UNITY_PATH = os.path.abspath("../../site_scons/site_tools/throwtheswitch/unity")
GENERATE_TEST_RUNNER = "{}/auto/generate_test_runner.rb".format(UNITY_PATH)

TEST_PATH = "unit_tests"

def SRC(tree):
    return "{u}/src/unity.c unit_tests/test_{t}.c unit_tests/test_runners/test_{t}.c".format(u=UNITY_PATH, t=tree)

def OBJ(tree):
    return "{t}/{t}.o".format(t=tree)

tree_name_list = [tree[:len(tree)-2] for tree in os.listdir("inc")]

env = Environment()
env.Append(CPPPATH=["inc", "{}".format(UNITY_PATH), "{}/src".format(UNITY_PATH)])
env.Append(CPPDEFINES="UNITY_INCLUDE_CONFIG_H")


for tree in tree_name_list:

    env.Command(
        source = TEST_PATH+"/test_{}.c".format(tree), 
        target = TEST_PATH+"/test_runners/test_{}.c".format(tree),
        action = "ruby {} $SOURCE $TARGET".format(GENERATE_TEST_RUNNER),
    )

    l = [env.Object("build/unity.o", "{}/src/unity.c".format(UNITY_PATH)),
        env.Object("build/{}.o".format(tree), "src/{}.c".format(tree)),
        env.Object("build/test_{}.o".format(tree), "unit_tests/test_runners/test_{}.c".format(tree))]
    p = env.Program(target="build/test_{}".format(tree), source=l)
    print(p)

